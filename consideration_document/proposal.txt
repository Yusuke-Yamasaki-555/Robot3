＜企画書＞


１．概要：狙って面
　　　マニピュレータ１台が棒を持ち、それぞれ高さと位置の異なる印を順番に倒す。


２．チャート
　０．前提条件
　　　　マニピュレータ１台、Realsense１台が必要となる。
　　　　Realsenseから得た画像をopenCVで加工をし、特定の色を抽出することで印や棒を認識する。
　　　　すべての印はマニピュレータの周囲360°の範囲に置き、高さも自由に決定する(カメラ認識できるかどうかは無視する)。ただし、マニピュレータからの距離はすべて等しくする。
　　　　印と棒には特徴的な色を付け、同じ色のものが無い様にする。また、誤認するほどの似たような色にはしない。
　　　　印の数は任意。
　　　　はじめに棒をおいておく場所は、マニピュレータの周囲360°、距離は一定にして置く。

　１．礼をする。左に置かれている棒を掴んで、構える。
　　　　　　置いてある棒をカメラで認識して、位置調整を行い、掴む。カメラの範囲内になければ、z軸回転をして見回す。
      　　カメラに棒がかぶらないように、カメラがハンドの左側(もしくは右側)に来るように手首を回し、構える。
　２．プログラムで倒す印の色の順番を指定し、リストの先頭の色を一定時間(or 一定回数、指定動作を行うまで)探す。カメラの範囲内になければ、z軸回転をして見回す。
  　　→指定の色の印を発見
　　　  　　印が特定の座標に来るように位置調整([生物味を出すため]位置調整は、ランダムで調整量を変化させる。位置調整に時間を設定する(定数加算方法))。
	  　　振りかぶり、打つ。振りかぶりは棒の先端がマニピュレータより後ろに行くようにし、打ちは棒の先端から3/4の位置が印に当たるようにする。
	   　 倒れたことをカメラで認識する。できなかった時は、首を傾げた後に改めて、調整量を減らして座標位置調整を行う。
    　→指定の色が見つからない
	 　　　 そのままの姿勢で首をかしげる。
	　→見つけたが、高さがありすぎて届かない
	 　　　 見つけた後に特定の座標に来るように位置調整しているときに、自身の最大z軸以上であることが分かった場合の動作。
	   　 頭を少し垂れて、腰を低くし、左右に振ってイヤイヤする。
　３．リストの先頭を消し、２に戻り、ループ。リストがなくなったら(リストの最後を示すフラグが読まれたら)、→ break
     
　break. その場で棒を前方に横にして置く。礼をして終了。

　（余裕があれば追加で、様々なイレギュラーに対応できるように、またイレギュラーに対して生物らしい反応ができるようにしていく）


３．目的
　　　今回の課題では、無機物であるマニピュレータに生物的な愛嬌を持たせたいと考えた。それを考える中で、単純な動作の中に含まれる様々なイレギュラーな可能性に対して生物的な反射をさせることでなら、
　　愛嬌を持たせられるのではないかと考え、今回の動きを考えるに至った。


４．必要検証内容
　　　今回の動きをさせるために必要と考えた検証の内容を列挙する。

　・必要なパッケージ(python3,ros)を洗い出す。
　・プログラムから目標座標を指定して制御する方法での、座標の単位を調べる。moveit関連。
　・正確なマニピュレータの制御の方法を検証。SRDFを直接いじる(rvizを活用)か、目標物の座標を直接moveitに渡すか。
　・SRDFから直接角度を指定して動作させる方法と、プログラムから直接座標を指定して動かす方法の、それぞれの良し悪しを列挙する。
　・カメラの映す範囲を調べる。特に縦方向。
　・面、構え、礼などの各モーションに対して、自然な動きを検証。愛嬌が出るように。
　・どのような印の形が良いか決める。ここを面白くする。
　・openCVの、画像から抽出する色をプログラムからスムーズに変更できるか。
　・各nodeのpubとsubのやり取りを洗い出す。
　・動作を制限するためのプログラムは、時間指定が良いか行動回数指定が良いか。また適切な指定量を決める。
　・SRDFで、ひとつだけの関節を指定して数値を送ることは可能か。
　・直前の関節の角度を維持しながら、特定の関節のみイジれるのかどうか。
　・SRDFから読んだデータをプログラム内で置き換えることができるかどうか。
　・印や棒のURDFの作成及び適用。URDFの書き方から学ぶ。gazeboの方でGUIから作れるならそれで。

　・必要作業の大まかなまとめ、各作業の予測工数を洗い出す。プログラム全体のフローチャートを作成し、手順を明確化する。
　　
　　　以下、必要か定かではないもの
　・Cmakeやlaunchの書き換え。

５．必要知識
　・ros全般の知識。特にnodeのやり取り。
　・moveitの知識。これを活用して制御を行う。
　・python3の知識。プログラムはpython3で記述する。
　・openCVの知識。カメラからの画像を処理するのに用いる。